{"version":3,"sources":["./src/app/module/sticky/modules/user-shop/user-shop-request.payload.ts","./src/app/module/sticky/modules/user-shop/user-shop.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAyE;AAElE,MAAM,sBAAuB,SAAQ,iFAAc;CAMzD;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAqC;AACwB;;AAMtD,MAAM,eAAgB,SAAQ,qEAAW;IAC5C;QACI,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;IACzC,CAAC;IAED,gFAAgF;IAChF,iFAAiF;IACjF,iGAAiG;IACjG,mCAAmC;IACnC,IAAI;IACG,kBAAkB,CAAC,OAAuB,EAAE,SAAmB;QAClE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,mBAAmB,EACvE,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC;aAC/F,IAAI,CAAC,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAChC,CAAC;;8EAfQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAHZ,MAAM","file":"common-es2015.js","sourcesContent":["import { RequestPayload } from '../../common/http/request-payload.model';\n\nexport class UserShopRequestPayload extends RequestPayload {\n    // orgId: string;\n    shopId: string;\n    userId: string;\n    userIds: string[];\n    id: string;\n}\n","import { RequestPayload } from '../../common/http/request-payload.model';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseResponse } from '../../common/http/base-response.model';\nimport { map } from 'rxjs/operators';\nimport { HttpService } from '../../common/http/http.service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserShopService extends HttpService {\n    constructor() {\n        super();\n        this.url = this.origin + 'user-shop';\n    }\n\n    // public insertShop(body: BaseResponse, isSpinner?: boolean): Observable<any> {\n    //     return this.intercept(this.httpClient.post<any>(`${this.url}/insert-shop`,\n    //         JSON.stringify(body), { observe: 'response', headers: this.getHeaders() }), isSpinner)\n    //         .pipe(map(r => r.body));\n    // }\n    public deleteShopFromUser(request: RequestPayload, isSpinner?: boolean): Observable<boolean> {\n        return this.intercept(this.httpClient.delete(`${this.url}/delete-user-shop`,\n            { observe: 'response', headers: this.getHeaders(), params: this.toParams(request) }), isSpinner)\n            .pipe(map(r => r.body));\n    }\n}\n"],"sourceRoot":"webpack:///"}