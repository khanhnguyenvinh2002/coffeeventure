{"version":3,"sources":["webpack:///src/app/module/sticky/modules/user-shop/user-shop-request.payload.ts","webpack:///src/app/module/sticky/modules/user-shop/user-shop.service.ts"],"names":["UserShopRequestPayload","UserShopService","url","origin","request","isSpinner","intercept","httpClient","observe","headers","getHeaders","params","toParams","pipe","r","body"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAEaA,sB;;;;;;;;;;;;QAA+B,iF;;;;;;;;;;;;;;;;;ACE5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,e;;;;;AACT,mCAAc;AAAA;;AAAA;;AACV;AACA,gBAAKC,GAAL,GAAW,MAAKC,MAAL,GAAc,WAAzB;AAFU;AAGb,S,CAED;AACA;AACA;AACA;AACA;;;;;iBACO,4BAAmBC,OAAnB,EAA4CC,SAA5C,EAA+D;AAClE,mBAAO,KAAKC,SAAL,CAAe,KAAKC,UAAL,qBAA0B,KAAKL,GAA/B,wBAClB;AAAEM,qBAAO,EAAE,UAAX;AAAuBC,qBAAO,EAAE,KAAKC,UAAL,EAAhC;AAAmDC,oBAAM,EAAE,KAAKC,QAAL,CAAcR,OAAd;AAA3D,aADkB,CAAf,EACmFC,SADnF,EAEFQ,IAFE,CAEG,2DAAI,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,IAAN;AAAA,aAAL,CAFH,CAAP;AAGH;;;;QAfgC,qE;;;yBAAxBd,e;AAAe,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAHZ","file":"common-es5.js","sourcesContent":["import { RequestPayload } from '../../common/http/request-payload.model';\n\nexport class UserShopRequestPayload extends RequestPayload {\n    // orgId: string;\n    shopId: string;\n    userId: string;\n    userIds: string[];\n    id: string;\n}\n","import { RequestPayload } from '../../common/http/request-payload.model';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseResponse } from '../../common/http/base-response.model';\nimport { map } from 'rxjs/operators';\nimport { HttpService } from '../../common/http/http.service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserShopService extends HttpService {\n    constructor() {\n        super();\n        this.url = this.origin + 'user-shop';\n    }\n\n    // public insertShop(body: BaseResponse, isSpinner?: boolean): Observable<any> {\n    //     return this.intercept(this.httpClient.post<any>(`${this.url}/insert-shop`,\n    //         JSON.stringify(body), { observe: 'response', headers: this.getHeaders() }), isSpinner)\n    //         .pipe(map(r => r.body));\n    // }\n    public deleteShopFromUser(request: RequestPayload, isSpinner?: boolean): Observable<boolean> {\n        return this.intercept(this.httpClient.delete(`${this.url}/delete-user-shop`,\n            { observe: 'response', headers: this.getHeaders(), params: this.toParams(request) }), isSpinner)\n            .pipe(map(r => r.body));\n    }\n}\n"]}