/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';
import * as moment_ from 'moment';
/** @type {?} */
var moment = moment_;
var MiniCalendarComponent = /** @class */ (function () {
    function MiniCalendarComponent(ref) {
        this.ref = ref;
        this.mainColor = '#03a9f4';
        this.secondaryColor = '#ff5';
        this.selectedDateChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    MiniCalendarComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.month = moment(this.selectedDate).clone();
        /** @type {?} */
        var start = moment(this.selectedDate).clone();
        start.date(1);
        this._removeTime(start.day(0));
        this._buildMonth(start, this.month);
        this.select(moment(this.selectedDate).clone());
        this.ref.detectChanges();
    };
    /**
     * @param {?} day
     * @return {?}
     */
    MiniCalendarComponent.prototype.select = /**
     * @param {?} day
     * @return {?}
     */
    function (day) {
        this.selectedDate = day.date;
        this.selectedDateChange.emit(this.selectedDate);
    };
    /**
     * @param {?} day
     * @return {?}
     */
    MiniCalendarComponent.prototype.getBgColor = /**
     * @param {?} day
     * @return {?}
     */
    function (day) {
        return {
            'background-color': this.isInWeek(day) ? this.secondaryColor : day.isToday ? this.mainColor : '',
            'opacity': day.isToday ? '.5' : '1'
        };
    };
    /**
     * @param {?} day
     * @return {?}
     */
    MiniCalendarComponent.prototype.isInWeek = /**
     * @param {?} day
     * @return {?}
     */
    function (day) {
        if (this.selectedDate && this.selectedDate.isSame) {
            if (this.showWeek) {
                /** @type {?} */
                var tempMoment = this.selectedDate.clone();
                tempMoment.isoWeekday(0);
                /** @type {?} */
                var otherTempMoment = this.selectedDate.clone();
                otherTempMoment.isoWeekday(7);
                otherTempMoment.isAfter(day.date);
                return tempMoment.isSame(day.date) || (tempMoment.isBefore(day.date) && otherTempMoment.isAfter(day.date));
            }
            else {
                return this.selectedDate.isSame(day.date);
            }
        }
        return false;
    };
    /**
     * @return {?}
     */
    MiniCalendarComponent.prototype.next = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var next = this.month.clone();
        this._removeTime(next.month(next.month() + 1).date(1));
        this.month.month(this.month.month() + 1);
        this._buildMonth(next, this.month);
    };
    /**
     * @return {?}
     */
    MiniCalendarComponent.prototype.previous = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var previous = this.month.clone();
        this._removeTime(previous.month(previous.month() - 1).date(1));
        this.month.month(this.month.month() - 1);
        this._buildMonth(previous, this.month);
    };
    /**
     * @param {?} date
     * @return {?}
     */
    MiniCalendarComponent.prototype._removeTime = /**
     * @param {?} date
     * @return {?}
     */
    function (date) {
        return date.day(0).hour(0).minute(0).second(0).millisecond(0);
    };
    /**
     * @param {?} date
     * @param {?} month
     * @return {?}
     */
    MiniCalendarComponent.prototype._buildWeek = /**
     * @param {?} date
     * @param {?} month
     * @return {?}
     */
    function (date, month) {
        /** @type {?} */
        var days = [];
        for (var i = 0; i < 7; i++) {
            days.push({
                name: date.format('dd').substring(0, 1),
                numb: date.date(),
                isCurrentMonth: date.month() === month.month(),
                isToday: date.isSame(new Date(), 'day'),
                date: date
            });
            date = date.clone();
            date.add(1, 'd');
        }
        return days;
    };
    /**
     * @param {?} start
     * @param {?} month
     * @return {?}
     */
    MiniCalendarComponent.prototype._buildMonth = /**
     * @param {?} start
     * @param {?} month
     * @return {?}
     */
    function (start, month) {
        this.weeks = [];
        /** @type {?} */
        var date = start.clone();
        /** @type {?} */
        var done = false;
        /** @type {?} */
        var monthIndex = date.month();
        /** @type {?} */
        var count = 0;
        while (!done) {
            this.weeks.push({ days: this._buildWeek(date.clone(), month) });
            date.add(1, 'w');
            done = count++ > 2 && monthIndex !== date.month();
            monthIndex = date.month();
        }
    };
    MiniCalendarComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mini-calendar',
                    template: "<div class=\"mini-calendar-component\">\n\t<div class=\"header layout-row layout-align-center-center\" [ngStyle]=\"{'background-color': mainColor}\">\n\t\t<i class=\"fas fa-chevron-left\" (click)=\"previous()\"></i>\n\t\t<span>{{month.format(\"MMM YYYY\")}}</span>\n\t\t<i class=\"fas fa-chevron-right\" (click)=\"next()\"></i>\n\t</div>\n\t<div class=\"week\" *ngFor=\"let week of weeks\">\n\t\t<span class=\"day\" [ngStyle]=\"getBgColor(day)\" [ngClass]=\"{ 'different-month': !day.isCurrentMonth }\"\n\t\t\t(click)=\"select(day)\" *ngFor=\"let day of week.days\">{{day.numb}}</span>\n\t</div>\n</div>\n",
                    styles: [".border-box{box-sizing:border-box;-moz-box-sizing:border-box}.mini-calendar-component{float:left;display:block;box-sizing:border-box;-moz-box-sizing:border-box;background:#fff;width:190px;border:1px solid #ccc}.mini-calendar-component>div.header{display:flex;justify-content:space-between;width:100%;height:40px;color:#fff;border-bottom:1px solid #ccc}.mini-calendar-component>div.header>*{height:40px;line-height:40px!important;display:inline-block;vertical-align:middle}.mini-calendar-component>div.header>i{float:left;width:30px;font-weight:700;position:relative;box-sizing:border-box;-moz-box-sizing:border-box;padding:0;cursor:pointer}.mini-calendar-component>div.header>span{float:left;font-weight:700;text-transform:uppercase;box-sizing:border-box;-moz-box-sizing:border-box;text-align:center;color:inherit}.mini-calendar-component>div.week{float:left;width:100%}.mini-calendar-component>div.week:first-child{border-top:none}.mini-calendar-component>div.week>span.day{float:left;width:14.28571429%;box-sizing:border-box;-moz-box-sizing:border-box;font-size:.75em;text-align:center;height:30px;line-height:30px!important;display:inline-block;vertical-align:middle;background:#fff;cursor:pointer;color:#000}.mini-calendar-component>div.week>span.day:first-child{border-left:none}.mini-calendar-component>div.week>span.day.different-month{color:silver}"]
                }] }
    ];
    /** @nocollapse */
    MiniCalendarComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    MiniCalendarComponent.propDecorators = {
        mainColor: [{ type: Input }],
        secondaryColor: [{ type: Input }],
        showWeek: [{ type: Input }],
        selectedDate: [{ type: Input }],
        selectedDateChange: [{ type: Output }]
    };
    return MiniCalendarComponent;
}());
export { MiniCalendarComponent };
if (false) {
    /** @type {?} */
    MiniCalendarComponent.prototype.mainColor;
    /** @type {?} */
    MiniCalendarComponent.prototype.secondaryColor;
    /** @type {?} */
    MiniCalendarComponent.prototype.showWeek;
    /** @type {?} */
    MiniCalendarComponent.prototype.selectedDate;
    /** @type {?} */
    MiniCalendarComponent.prototype.selectedDateChange;
    /** @type {?} */
    MiniCalendarComponent.prototype.month;
    /** @type {?} */
    MiniCalendarComponent.prototype.weeks;
    /** @type {?} */
    MiniCalendarComponent.prototype.ref;
}
//# sourceMappingURL=data:application/json;base64,